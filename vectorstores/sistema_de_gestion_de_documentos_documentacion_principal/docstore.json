[["0",{"pageContent":"# Frontend Document Management System\r\n\r\nSistema de gestión de documentos desarrollado con Next.js, React y Prisma. Esta documentación proporciona una guía completa para desarrolladores, administradores y usuarios del sistema.\r\n\r\n## Información General\r\n\r\nEl Sistema de Gestión de Documentos es una aplicación web moderna diseñada para facilitar el manejo, almacenamiento y procesamiento de documentos digitales. Construida con tecnologías web modernas, ofrece una interfaz intuitiva para la administración documental.\r\n\r\n### Características Principales\r\n\r\n- Visualización y manejo de documentos PDF\r\n- Sistema de autenticación y autorización\r\n- Gestión de flujos de trabajo documentales\r\n- Interfaz de usuario adaptativa con material-UI y Tailwind\r\n\r\n## Stack Tecnológico\r\n\r\nEl proyecto está desarrollado con las siguientes tecnologías:\r\n\r\n- **Next.js 14 (React Framework)**\r\n- **React 18**\r\n- **TypeScript**\r\n- **Prisma ORM**\r\n- **Material UI**\r\n- **Tailwind CSS**","metadata":{"source":"docs\\sistema_de_gestion_de_documentos_documentacion_principal.txt","loc":{"lines":{"from":1,"to":25}}}}],["1",{"pageContent":"El proyecto está desarrollado con las siguientes tecnologías:\r\n\r\n- **Next.js 14 (React Framework)**\r\n- **React 18**\r\n- **TypeScript**\r\n- **Prisma ORM**\r\n- **Material UI**\r\n- **Tailwind CSS**\r\n- **NextAuth para autenticación**\r\n- **React PDF Viewer**\r\n- **Jotai para gestión de estado**\r\n\r\n## Secciones de la Documentación\r\n\r\nLa documentación está organizada en las siguientes secciones:\r\n\r\n1. **Guía de Instalación** - Configuración del entorno y pasos para instalar el proyecto.\r\n2. **Arquitectura** - Descripción detallada de la estructura del proyecto y sus componentes.\r\n3. **Guía de Desarrollo** - Buenas prácticas y estándares de desarrollo para el proyecto.\r\n4. **API y Servicios** - Documentación de las APIs y servicios utilizados.\r\n5. **Flujos de Trabajo** - Descripción de los flujos de trabajo para la gestión de documentos.\r\n6. **Gestión de Estado** - Guía sobre el manejo de estado con Jotai y patrones utilizados.","metadata":{"source":"docs\\sistema_de_gestion_de_documentos_documentacion_principal.txt","loc":{"lines":{"from":18,"to":39}}}}],["2",{"pageContent":"5. **Flujos de Trabajo** - Descripción de los flujos de trabajo para la gestión de documentos.\r\n6. **Gestión de Estado** - Guía sobre el manejo de estado con Jotai y patrones utilizados.\r\n7. **Configuración y Variables de Entorno** - Referencia para la configuración del proyecto.\r\n8. **Despliegue** - Guía para desplegar la aplicación en diferentes entornos.\r\n9. **Pruebas** - Estrategias y guías para las pruebas del proyecto.\r\n\r\n## Convenciones del Proyecto\r\n\r\nEste proyecto sigue un conjunto de convenciones para mantener un código limpio y consistente:\r\n\r\n- Se utiliza TypeScript para todo el código\r\n- Arquitectura de componentes siguiendo patrones de Atomic Design\r\n- Gestión de estado centralizada con Jotai\r\n- Uso de ESLint y Prettier para mantener la calidad del código","metadata":{"source":"docs\\sistema_de_gestion_de_documentos_documentacion_principal.txt","loc":{"lines":{"from":38,"to":51}}}}],["3",{"pageContent":"# Frontend Document Management System\r\n\r\nSistema de gestión de documentos desarrollado con Next.js, React y Prisma. Esta documentación proporciona una guía completa para desarrolladores, administradores y usuarios del sistema.\r\n\r\n## Información General\r\n\r\nEl Sistema de Gestión de Documentos es una aplicación web moderna diseñada para facilitar el manejo, almacenamiento y procesamiento de documentos digitales. Construida con tecnologías web modernas, ofrece una interfaz intuitiva para la administración documental.\r\n\r\n### Características Principales\r\n\r\n- Visualización y manejo de documentos PDF\r\n- Sistema de autenticación y autorización\r\n- Gestión de flujos de trabajo documentales\r\n- Interfaz de usuario adaptativa con material-UI y Tailwind\r\n\r\n## Stack Tecnológico\r\n\r\nEl proyecto está desarrollado con las siguientes tecnologías:\r\n\r\n- **Next.js 14 (React Framework)**\r\n- **React 18**\r\n- **TypeScript**\r\n- **Prisma ORM**\r\n- **Material UI**\r\n- **Tailwind CSS**","metadata":{"source":"docs\\sistema_de_gestion_de_documentos_documentacion_principal.txt","loc":{"lines":{"from":1,"to":25}}}}],["4",{"pageContent":"El proyecto está desarrollado con las siguientes tecnologías:\r\n\r\n- **Next.js 14 (React Framework)**\r\n- **React 18**\r\n- **TypeScript**\r\n- **Prisma ORM**\r\n- **Material UI**\r\n- **Tailwind CSS**\r\n- **NextAuth para autenticación**\r\n- **React PDF Viewer**\r\n- **Jotai para gestión de estado**\r\n\r\n## Secciones de la Documentación\r\n\r\nLa documentación está organizada en las siguientes secciones:\r\n\r\n1. **Guía de Instalación** - Configuración del entorno y pasos para instalar el proyecto.\r\n2. **Arquitectura** - Descripción detallada de la estructura del proyecto y sus componentes.\r\n3. **Guía de Desarrollo** - Buenas prácticas y estándares de desarrollo para el proyecto.\r\n4. **API y Servicios** - Documentación de las APIs y servicios utilizados.\r\n5. **Flujos de Trabajo** - Descripción de los flujos de trabajo para la gestión de documentos.\r\n6. **Gestión de Estado** - Guía sobre el manejo de estado con Jotai y patrones utilizados.","metadata":{"source":"docs\\sistema_de_gestion_de_documentos_documentacion_principal.txt","loc":{"lines":{"from":18,"to":39}}}}],["5",{"pageContent":"5. **Flujos de Trabajo** - Descripción de los flujos de trabajo para la gestión de documentos.\r\n6. **Gestión de Estado** - Guía sobre el manejo de estado con Jotai y patrones utilizados.\r\n7. **Configuración y Variables de Entorno** - Referencia para la configuración del proyecto.\r\n8. **Despliegue** - Guía para desplegar la aplicación en diferentes entornos.\r\n9. **Pruebas** - Estrategias y guías para las pruebas del proyecto.\r\n\r\n## Convenciones del Proyecto\r\n\r\nEste proyecto sigue un conjunto de convenciones para mantener un código limpio y consistente:\r\n\r\n- Se utiliza TypeScript para todo el código\r\n- Arquitectura de componentes siguiendo patrones de Atomic Design\r\n- Gestión de estado centralizada con Jotai\r\n- Uso de ESLint y Prettier para mantener la calidad del código","metadata":{"source":"docs\\sistema_de_gestion_de_documentos_documentacion_principal.txt","loc":{"lines":{"from":38,"to":51}}}}],["6",{"pageContent":"# Frontend Document Management System\r\n\r\nSistema de gestión de documentos desarrollado con Next.js, React y Prisma. Esta documentación proporciona una guía completa para desarrolladores, administradores y usuarios del sistema.\r\n\r\n## Información General\r\n\r\nEl Sistema de Gestión de Documentos es una aplicación web moderna diseñada para facilitar el manejo, almacenamiento y procesamiento de documentos digitales. Construida con tecnologías web modernas, ofrece una interfaz intuitiva para la administración documental.\r\n\r\n### Características Principales\r\n\r\n- Visualización y manejo de documentos PDF\r\n- Sistema de autenticación y autorización\r\n- Gestión de flujos de trabajo documentales\r\n- Interfaz de usuario adaptativa con material-UI y Tailwind\r\n\r\n## Stack Tecnológico\r\n\r\nEl proyecto está desarrollado con las siguientes tecnologías:\r\n\r\n- **Next.js 14 (React Framework)**\r\n- **React 18**\r\n- **TypeScript**\r\n- **Prisma ORM**\r\n- **Material UI**\r\n- **Tailwind CSS**","metadata":{"source":"docs\\sistema_de_gestion_de_documentos_documentacion_principal.txt","loc":{"lines":{"from":1,"to":25}}}}],["7",{"pageContent":"El proyecto está desarrollado con las siguientes tecnologías:\r\n\r\n- **Next.js 14 (React Framework)**\r\n- **React 18**\r\n- **TypeScript**\r\n- **Prisma ORM**\r\n- **Material UI**\r\n- **Tailwind CSS**\r\n- **NextAuth para autenticación**\r\n- **React PDF Viewer**\r\n- **Jotai para gestión de estado**\r\n\r\n## Secciones de la Documentación\r\n\r\nLa documentación está organizada en las siguientes secciones:\r\n\r\n1. **Guía de Instalación** - Configuración del entorno y pasos para instalar el proyecto.\r\n2. **Arquitectura** - Descripción detallada de la estructura del proyecto y sus componentes.\r\n3. **Guía de Desarrollo** - Buenas prácticas y estándares de desarrollo para el proyecto.\r\n4. **API y Servicios** - Documentación de las APIs y servicios utilizados.\r\n5. **Flujos de Trabajo** - Descripción de los flujos de trabajo para la gestión de documentos.\r\n6. **Gestión de Estado** - Guía sobre el manejo de estado con Jotai y patrones utilizados.","metadata":{"source":"docs\\sistema_de_gestion_de_documentos_documentacion_principal.txt","loc":{"lines":{"from":18,"to":39}}}}],["8",{"pageContent":"5. **Flujos de Trabajo** - Descripción de los flujos de trabajo para la gestión de documentos.\r\n6. **Gestión de Estado** - Guía sobre el manejo de estado con Jotai y patrones utilizados.\r\n7. **Configuración y Variables de Entorno** - Referencia para la configuración del proyecto.\r\n8. **Despliegue** - Guía para desplegar la aplicación en diferentes entornos.\r\n9. **Pruebas** - Estrategias y guías para las pruebas del proyecto.\r\n\r\n## Convenciones del Proyecto\r\n\r\nEste proyecto sigue un conjunto de convenciones para mantener un código limpio y consistente:\r\n\r\n- Se utiliza TypeScript para todo el código\r\n- Arquitectura de componentes siguiendo patrones de Atomic Design\r\n- Gestión de estado centralizada con Jotai\r\n- Uso de ESLint y Prettier para mantener la calidad del código","metadata":{"source":"docs\\sistema_de_gestion_de_documentos_documentacion_principal.txt","loc":{"lines":{"from":38,"to":51}}}}]]